import React, { useState, useEffect } from "react";
import { useForm } from "react-hook-form";
import { useSelector, useDispatch } from "react-redux";
import { placeOrder } from "../redux/cartSlice.js";

const StepOne = ({ onNext, defaultValues }) => {
  const { register, handleSubmit, formState: { errors } } = useForm({ defaultValues });
  return (
    <form onSubmit={handleSubmit(onNext)}>
      <div>
        <label>H·ªç v√† t√™n</label><br />
        <input {...register("name", { required: "B·∫Øt bu·ªôc" })} />
        {errors.name && <div style={{ color: "red" }}>{errors.name.message}</div>}
      </div>
      <div>
        <label>Email</label><br />
        <input
          {...register("email", {
            required: "B·∫Øt bu·ªôc",
            pattern: { value: /^\S+@\S+$/i, message: "Email kh√¥ng h·ª£p l·ªá" }
          })}
        />
        {errors.email && <div style={{ color: "red" }}>{errors.email.message}</div>}
      </div>
      <div style={{ marginTop: 8 }}>
        <button className="button" type="submit">Ti·∫øp t·ª•c</button>
      </div>
    </form>
  );
};

const StepTwo = ({ onNext, onBack, defaultValues }) => {
  const { register, handleSubmit, formState: { errors } } = useForm({ defaultValues });
  return (
    <form onSubmit={handleSubmit(onNext)}>
      <div>
        <label>ƒê·ªãa ch·ªâ</label><br />
        <input
          {...register("address", {
            required: "B·∫Øt bu·ªôc",
            minLength: { value: 5, message: "√çt nh·∫•t 5 k√Ω t·ª±" }
          })}
        />
        {errors.address && <div style={{ color: "red" }}>{errors.address.message}</div>}
      </div>
      <div style={{ marginTop: 8 }}>
        <button className="btn-secondary" type="button" onClick={onBack}>Quay l·∫°i</button>
        <button className="button" type="submit" style={{ marginLeft: 8 }}>Ti·∫øp t·ª•c</button>
      </div>
    </form>
  );
};

const StepThree = ({ onNext, onBack, defaultValues }) => {
  const { register, handleSubmit } = useForm({ defaultValues });
  return (
    <form onSubmit={handleSubmit(onNext)}>
      <div>
        <label>Ph∆∞∆°ng th·ª©c thanh to√°n</label><br />
        <select {...register("payment")}>
          <option value="card">Thanh to√°n b·∫±ng th·∫ª</option>
          <option value="cod">Thanh to√°n khi nh·∫≠n h√†ng</option>
        </select>
      </div>
      <div style={{ marginTop: 8 }}>
        <button className="btn-secondary" type="button" onClick={onBack}>Quay l·∫°i</button>
        <button className="button" type="submit" style={{ marginLeft: 8 }}>X√°c nh·∫≠n</button>
      </div>
    </form>
  );
};

export default function CheckoutPage() {
  const items = useSelector((s) => s.cart.items);
  const subtotal = items.reduce((s, i) => s + i.price * i.quantity, 0);
  const dispatch = useDispatch();

  const [step, setStep] = useState(1);

  // üëâ Load d·ªØ li·ªáu t·ª´ localStorage ngay t·ª´ ƒë·∫ßu
  const [formData, setFormData] = useState(() => {
    const saved = localStorage.getItem("checkoutForm");
    return saved ? JSON.parse(saved) : {};
  });

  // üëâ L∆∞u d·ªØ li·ªáu v√†o localStorage m·ªói khi formData thay ƒë·ªïi
  useEffect(() => {
    localStorage.setItem("checkoutForm", JSON.stringify(formData));
  }, [formData]);

  const next = (data) => {
    setFormData((prev) => ({ ...prev, ...data }));
    setStep((s) => s + 1);
  };
  const back = () => setStep((s) => s - 1);

  const confirmOrder = (data) => {
    const order = {
      ...formData,
      ...data,
      items,
      total: subtotal + (subtotal > 500000 ? 0 : 30000)
    };
    dispatch(placeOrder(order));
    alert("ƒê·∫∑t h√†ng th√†nh c√¥ng! T·ªïng: " + order.total.toLocaleString() + " ‚Ç´");
    setStep(1);
  };

  return (
    <div style={{ display: "grid", gridTemplateColumns: "2fr 1fr", gap: 16 }}>
      <div>
        <div className="steps">
          <div className={`step ${step === 1 ? "active" : ""}`}>1. Th√¥ng tin</div>
          <div className={`step ${step === 2 ? "active" : ""}`}>2. ƒê·ªãa ch·ªâ</div>
          <div className={`step ${step === 3 ? "active" : ""}`}>3. Thanh to√°n</div>
        </div>

        <div style={{ background: "#fff", padding: 16, borderRadius: 8 }}>
          {step === 1 && <StepOne onNext={next} defaultValues={formData} />}
          {step === 2 && <StepTwo onNext={next} onBack={back} defaultValues={formData} />}
          {step === 3 && <StepThree onNext={confirmOrder} onBack={back} defaultValues={formData} />}
        </div>
      </div>

      <aside className="right-panel">
        <h3>T√≥m t·∫Øt</h3>
        <p>S·∫£n ph·∫©m: {items.length}</p>
        <p>T·∫°m t√≠nh: {subtotal.toLocaleString()} ‚Ç´</p>
        <p>Ph√≠ ship: {subtotal > 500000 ? "Mi·ªÖn ph√≠" : "30,000 ‚Ç´"}</p>
        <h3>T·ªïng: {(subtotal + (subtotal > 500000 ? 0 : 30000)).toLocaleString()} ‚Ç´</h3>
      </aside>
    </div>
  );
}



